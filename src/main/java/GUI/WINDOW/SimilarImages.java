/**
 * Projekt do předmětu PDB (2016/2017) - Prostorové, multimediální a temporální 
 * databáze: Metro Accident Databse
 * Autoři: Petr Staněk (xstane34), 
           František Matečný (xmatec00),
           Jakub Stejskal (xstejs24)
 * Datum:  12.12.2016
 * Verze:  1.0
 */
package GUI.WINDOW;

import GUI.TABS.Search;
import GUI.Main;
import static GUI.WINDOW.Incident.getScaledImage;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;
import oracle.ord.im.OrdImage;

/**
 * Třída pro vytvoření okna zobrazující podobné obrázky k pořadovnému.
 */
public class SimilarImages extends javax.swing.JDialog {
	private Search search; // předek modálního okna
	
	/**
	 * Vytvoří okno pro zobrazení podobných obrázků k požadovanému.
	 * @param parent předek modálního okna
	 * @param modal příznak zapnutí modality
	 */
	public SimilarImages(java.awt.Dialog parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}
	
	/**
	 * Inicializace okna pro zobrazení obrázků.
	 * @param imgID ID obrázku, ke kterému hledáme podobné
	 * @param search ukazatel na rodiče modálního okna
	 */
	public void setSimilarTo(int imgID, Search search)
	{
		this.search = search;
		
		try (OraclePreparedStatement pstmt = DB.Queries.Incident.searchByFoto(imgID, 0.5, 0.5, 0.5, 0.1)) 
		{
			try (OracleResultSet rs = (OracleResultSet) pstmt.executeQuery())
			{
				// pro každý obrázek v DB
				while (rs.next()) {
					int incidentID = rs.getInt("incident"); // id obrázku v DB
					String caption = rs.getString("popisek");
					
					// získání obrázku z DB
					OrdImage imgProxy = (OrdImage) rs.getORAData("foto", OrdImage.getORADataFactory());
					ImageIcon srcIcon = new ImageIcon(imgProxy.getDataInByteArray());
					addThumbnail(incidentID, srcIcon, caption);
				}
			}
		}
		catch (SQLException e)
		{
			System.err.println("Exception setSimilarTo(): " + e.getMessage());
		}
		catch (Exception e)
		{
			System.err.println("Exception setSimilarTo(): " + e.getMessage());
		}
	}
	
	/**
	 * Pridá jendotlivý náhled obrázku do zobrazovacího panelu.
	 * @param accidenID ID incidentu, ze kterého je obrázek 
	 * @param srcIcon zobrazovaný podobný obrázek
	 * @param caption popisek obrázku
	 */
	private void addThumbnail(final int accidenID, ImageIcon srcIcon, String caption)
	{
		// zmenšení obrázku na náhled
		ImageIcon dstIcon = getScaledImage(srcIcon, 150, 150);
					
		// kontejner s obrázkem
		JLabel jImgContainer = new JLabel();
		jImgContainer.setIcon(dstIcon);
		jImgContainer.setHorizontalAlignment(JLabel.CENTER);

		// kontejner s obrázkem a tlačítky
		JPanel jImgBtnContainer = new JPanel(new BorderLayout());
		jImgBtnContainer.setPreferredSize(new Dimension(150, 150));
		jImgBtnContainer.add(jImgContainer, BorderLayout.CENTER);
		jImgBtnContainer.setBackground(Color.decode("#CCCCCC"));

		// titulek obrázku
		javax.swing.JLabel jLblInfo = new javax.swing.JLabel(caption);	
		Border border = jLblInfo.getBorder();
		Border margin = new EmptyBorder(0,10, 0 ,10);
		jLblInfo.setBorder(new CompoundBorder(border, margin));
		
		// vložení tlačítek do výsledného konteineru
		jImgBtnContainer.add(jLblInfo, BorderLayout.AFTER_LAST_LINE);
		jImgBtnContainer.setBorder(BorderFactory.createMatteBorder(
			2, 2, 2, 2, Color.BLACK));
		
		// vložení výsledného kontejneru do GUI
		jPFotos.add(jImgBtnContainer);

		///////////////////////////// listenery ////////////////////////////////
		
		// listener pro zvětšení obrázku
		jImgContainer.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e)
			{
				jBtnShowIncidentPerformed(accidenID);
				
			}		
		});
	}
	
	private void jBtnShowIncidentPerformed(int accidenID)
	{
		// vytvoření okna s incidentem
		Incident a = new Incident(Main.TopLevelWindow, true);

		// inicializace otevřeného okna pro úpravu záznamu incidentu v DB
		a.initForUpdate(accidenID, search);
		a.setVisible(true);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollFotos = new javax.swing.JScrollPane();
        jPFotos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPFotos.setLayout(new java.awt.GridLayout(0, 4, 5, 5));
        jScrollFotos.setViewportView(jPFotos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollFotos, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollFotos, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SimilarImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SimilarImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SimilarImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SimilarImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				SimilarImages dialog = new SimilarImages(new javax.swing.JDialog(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPFotos;
    private javax.swing.JScrollPane jScrollFotos;
    // End of variables declaration//GEN-END:variables
}
